
let BotStrings = {
  hello_OGS: "hello_OGS",
  start_message: "start_message",
  INPUT_OGS_REQUST: "input_ogs_requst",
  ogs_id_error: "ogs_id_error",
  ogs_linked_success: "ogs_linked_success",
  my_time: "my_time",
  my_time_hint: "my_time_hint",
  heatmap_title: "heatmap_title",
  heatmapLegend: "heatmapLegend",
  heatmap_keyboard: "heatmap_keyboard",
  refresh_text: "refresh_text",
  switch_lang: "switch_lang",
  switch_lang_keyboard: "switch_lang_keyboard",

  get(key,...args){
    let BotStringsLocale;
    switch(user.language_code){
      case "ru":
        BotStringsLocale = BotStringsRu;
        break;
      default:
        BotStringsLocale = BotStringsEng;
    };
  
    if (BotStringsLocale[key] != undefined){
      return BotStringsLocale[key](args);
    }
    else return BotStringsEng[key](args);
  }
}

let BotStringsEng = {
  hello_OGS(args){return "Hello, <b>"+args[0]+"</b>!";},

  start_message(){
    return "Bot features:"+
    "\n"+BotCommands.mytime+" ‚Äî count the playing time"+
    "\n"+BotCommands.heatmap+" ‚Äî build games heatmap"+
    "\n\nSettings:\n"+BotCommands.switch_ogs+" ‚Äî change OGS account";
    // BotCommands.switch_lang+" ‚Äî change the language";
  },
  input_ogs_requst(){return "To use the bot features, send a link to your online-go.com account\n";},
  ogs_id_error(){return "The OGS account ID is not defined. Try another link";},
  ogs_linked_success(args){return "The OGS profile is now linked! Your nickname: <b>"+args[0]+"</b>"},
  my_time(args){
    let mes = "";
    if(args.length>2) mes+="from <i>"+args[2]+"</i> to <i>"+args[3]+"</i>:";
    else mes+="all-time data:";
    mes += "\n<b>"+args[0]+"</b> ‚Äî number of games\n<b>"+args[1]+"</b> ‚Äî hours of live playing time";
    
    return mes;
  },
  my_time_hint(){return "Number of games: all completed non-annulled non-private games are counted."+
  "\nLive playing time: the time of all games that lasted less than 3 hours is summed up."+
  "\nYou can also find out the playing time for the specific period. You can send a message in the following format:\n<i>"+
  BotCommands.mytime+" 2022-01-01 2022-02-15</i>"},
  heatmap_title(args){return "<b>heatmap</b>! \nGo activity in <i>"+args[0]+"</i>:\n"},
  heatmapLegend(){return "Heatmap legend:\n‚¨úÔ∏è = 0 games played per day\nüü® = 1 games played per day\nüüß = 2-4 games played per day\nüü• = 5+ games played per day"+
  "\nDays order: mon tue wed thu fri sat sun"},
  heatmap_keyboard(args){
    return {
      inline_keyboard: [
        [{text: "<",callback_data: ButtonsCallbacks.heatmap_update+" "+args[0]},
        {text: args[3],callback_data: ButtonsCallbacks.heatmap_update+" "+args[1]},
        {text: ">",callback_data: ButtonsCallbacks.heatmap_update+" "+args[2]}]
      ]
    }
  },
  refresh_text(){return "Refresh"},
  switch_lang(){return "Select a language"},
  switch_lang_keyboard(){return{
    inline_keyboard: [
      [{text: "English",callback_data: ButtonsCallbacks.set_language+" en"},
      {text: "–†—É—Å—Å–∫–∏–π",callback_data: ButtonsCallbacks.set_language+" ru"}]
    ]
  }},

};

let BotStringsRu = {
  hello_OGS(args){return "–ü—Ä–∏–≤–µ—Ç, <b>"+args[0]+"</b>!";},

  start_message(){
    return "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:"+
    "\n"+BotCommands.mytime+" ‚Äî —É–∑–Ω–∞—Ç—å –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"+
    "\n"+BotCommands.heatmap+" ‚Äî –≥—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"+
    "\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"+BotCommands.switch_ogs+" ‚Äî —Å–º–µ–Ω–∏—Ç—å OGS –∞–∫–∫–∞—É–Ω—Ç";
  },
  input_ogs_requst(){return "–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ online-go.com\n";},
  ogs_id_error(){return "ID –∞–∫–∫–∞—É–Ω—Ç–∞ –û–ì–° –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É";},
  ogs_linked_success(args){return "–ü—Ä–æ—Ñ–∏–ª—å –û–ì–° —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–≤—è–∑–∞–Ω! –¢–≤–æ–π –Ω–∏–∫–Ω–µ–π–º: <b>"+args[0]+"</b>"},
  my_time(args){
    let mes = "";
    if(args.length>2) mes+="—Å <i>"+args[2]+"</i> –ø–æ <i>"+args[3]+"</i>:";
    else mes+="–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è:";
    mes += "\n<b>"+args[0]+"</b> ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä\n<b>"+args[1]+"</b> ‚Äî —á–∞—Å—ã –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏";
    
    return mes;
  },
  my_time_hint(){return "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä: —Å—á–∏—Ç–∞—é—Ç—Å—è –≤—Å–µ –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ –Ω–µ–∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–µ–ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã."+
  "\n–ù–∞–∏–≥—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è: —Å—É–º–º–∏—Ä—É–µ—Ç—Å—è –≤—Ä–µ–º—è –≤—Å–µ—Ö –∏–≥—Ä, –∫–æ—Ç–æ—Ä—ã–µ –¥–ª–∏–ª–∏—Å—å –º–µ–Ω—å—à–µ 3 —á–∞—Å–æ–≤."+
  "\n–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥. –ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n<i>"+
  BotCommands.mytime+" 2022-01-01 2022-02-15</i>"},
  heatmap_title(args){return "<b>heatmap</b>! \n–ì–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ <i>"+args[0]+"</i>:\n"},
  heatmapLegend(){return "–û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è:\n‚¨úÔ∏è = 0 –∏–≥—Ä –∑–∞ –¥–µ–Ω—å\nüü® = 1 –∏–≥—Ä –∑–∞ –¥–µ–Ω—å\nüüß = 2-4 –∏–≥—Ä –∑–∞ –¥–µ–Ω—å\nüü• = 5+ –∏–≥—Ä –∑–∞ –¥–µ–Ω—å"+
  "\n–ü–æ—Ä—è–¥–æ–∫ –¥–Ω–µ–π: –ø–Ω –≤—Ç —Å—Ä —á—Ç –ø—Ç —Å–± –≤—Å"},
  heatmap_keyboard(args){
    return {
      inline_keyboard: [
        [{text: "<",callback_data: ButtonsCallbacks.heatmap_update+" "+args[0]},
        {text: args[3],callback_data: ButtonsCallbacks.heatmap_update+" "+args[1]},
        {text: ">",callback_data: ButtonsCallbacks.heatmap_update+" "+args[2]}]
      ]
    }
  },
  refresh_text(){return "–û–±–Ω–æ–≤–∏—Ç—å"}


};
